generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id               Int       @id @default(autoincrement())
  username         String    @unique @db.VarChar(255)
  password         String    @db.VarChar(255)
  orders           Orders[]
  lastLogin        DateTime? @db.Timestamp(6)
  hashRefreshToken String?   @db.VarChar(255)
  roles            String[]  @default(["user"])
  createdAt        DateTime? @default(now()) @db.Timestamp(6)
  updatedAt        DateTime? @default(now()) @db.Timestamp(6)
}

model Books {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(255)
  address     String @db.Text()
  phoneNumber String @db.VarChar()
  note        String @db.Text()
}

model Products {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(255)
  description String       @db.Text()
  quantity    Int          @default(0) @db.Integer()
  price       Decimal      @default(0.00) @db.Decimal(10, 2)
  OrderItems  OrderItems[]
}

model Orders {
  id         Int          @id @default(autoincrement())
  userId     Int          @db.Integer
  status     OrderStatus  @default(CART)
  price      Decimal      @default(0.00) @db.Decimal(10, 2)
  user       Users        @relation(fields: [userId], references: [id])
  OrderItems OrderItems[]
}

model OrderItems {
  id        Int      @id @default(autoincrement())
  orderId   Int      @db.Integer
  productId Int      @db.Integer
  quantity  Int      @db.Integer
  price     Decimal  @default(0.00) @db.Decimal(10, 2)
  order     Orders   @relation(fields: [orderId], references: [id])
  product   Products @relation(fields: [productId], references: [id])
}

enum OrderStatus {
  CART
  PAID
}
